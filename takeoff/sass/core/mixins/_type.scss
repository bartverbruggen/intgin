// Functions
//
// Based on the relative-size function from Stitch, http://stitchcss.com/
@function relative-size( $target, $context: $font-size-med, $unit: rem ) {
  @return #{$target/$context}$unit;
}
@function rs( $target, $context: $font-size-med, $unit: rem ) {
  @return relative-size($target, $context, $unit);
}
@function fs( $target, $context: $font-size-root, $unit: rem ) {
  @return #{round(($target/$context)*1000)/1000}$unit;
}
@function lh( $target, $context: $font-size-med ) {
  @return round(($target/$context)*1000)/1000;
}

%ext-listreset {
  list-style: none;
  margin: 0;
  padding: 0;
}
// Reset the list
@mixin listreset {
  @extend %ext-listreset;
  // ul {
  //   @extend %ext-listreset;
  // }
}

// A CSS image replacement method that does not require the use of text-indent.
@mixin hide-text {
  font: 0/0 a;
  text-shadow: none;
  color: transparent;
}

// Convert a px font size to rem
@mixin fsRem($font-size) {
  font-size: $font-size;
  font-size: fs($font-size);
}

@mixin background-sliding($color, $color-alt: transparent, $position: down) {
  background-image: linear-gradient(to bottom, $color 0%, $color 50%, $color-alt 50%, $color-alt 100%);
  background-size: 100% 200%;
  @if $position == down {
    background-position: 0 100%;
  }
  @if $position == up {
    background-position: 0 -100%;
  }
  @include transitions((background, color));
  &:hover,
  &:focus,
  &:active {
    background-position: 0 0;
    color: invert($color);
    border-color: $color;
  }
}

@mixin link-variant($link: $color-link, $hover: null, $visited: null) {
  @if $visited == null {
    $visited: $link;
  }
  @if $hover == null {
    $hover: $link;
  }

  color: $link;
  &:visited {
    color: $visited;
  }
  &:hover,
  &:focus {
    color: $hover;
  }
}


